{"ast":null,"code":"import { authAPI } from './api';\nclass AuthService {\n  login(username, password) {\n    return authAPI.login(username, password).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n  }\n  logout() {\n    localStorage.removeItem('user');\n  }\n  register(username, email, password, firstName, lastName, phoneNumber, roles) {\n    return authAPI.register({\n      username,\n      email,\n      password,\n      firstName,\n      lastName,\n      phoneNumber,\n      roles\n    });\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n  isUserLoggedIn() {\n    const user = this.getCurrentUser();\n    return !!user && !!user.accessToken;\n  }\n  getToken() {\n    const user = this.getCurrentUser();\n    return user === null || user === void 0 ? void 0 : user.accessToken;\n  }\n  hasRole(requiredRoles) {\n    const user = this.getCurrentUser();\n    if (!user) return false;\n    return requiredRoles.some(role => user.roles.includes(role));\n  }\n  updateProfile(firstName, lastName, phoneNumber, currentPassword, newPassword) {\n    return authAPI.updateProfile({\n      firstName,\n      lastName,\n      phoneNumber,\n      password: newPassword,\n      currentPassword\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["authAPI","AuthService","login","username","password","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","firstName","lastName","phoneNumber","roles","getCurrentUser","parse","getItem","isUserLoggedIn","user","getToken","hasRole","requiredRoles","some","role","includes","updateProfile","currentPassword","newPassword"],"sources":["c:/Users/user/Desktop/applied system software/wedding-manager-frontend/src/services/auth.service.js"],"sourcesContent":["import { authAPI } from './api';\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return authAPI.login(username, password)\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem('user', JSON.stringify(response.data));\r\n        }\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n  }\r\n\r\n  register(username, email, password, firstName, lastName, phoneNumber, roles) {\r\n    return authAPI.register({\r\n      username,\r\n      email,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      phoneNumber,\r\n      roles\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    const user = this.getCurrentUser();\r\n    return !!user && !!user.accessToken;\r\n  }\r\n\r\n  getToken() {\r\n    const user = this.getCurrentUser();\r\n    return user?.accessToken;\r\n  }\r\n\r\n  hasRole(requiredRoles) {\r\n    const user = this.getCurrentUser();\r\n    if (!user) return false;\r\n    \r\n    return requiredRoles.some(role => user.roles.includes(role));\r\n  }\r\n\r\n  updateProfile(firstName, lastName, phoneNumber, currentPassword, newPassword) {\r\n    return authAPI.updateProfile({\r\n      firstName,\r\n      lastName,\r\n      phoneNumber,\r\n      password: newPassword,\r\n      currentPassword\r\n    })\r\n    .then(response => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n      }\r\n      return response.data;\r\n    });\r\n  }\r\n}\r\n\r\nexport default new AuthService(); "],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxB,OAAOJ,OAAO,CAACE,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7D;MACA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACN;EAEAM,MAAMA,CAAA,EAAG;IACPJ,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,QAAQA,CAACZ,QAAQ,EAAEa,KAAK,EAAEZ,QAAQ,EAAEa,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,KAAK,EAAE;IAC3E,OAAOpB,OAAO,CAACe,QAAQ,CAAC;MACtBZ,QAAQ;MACRa,KAAK;MACLZ,QAAQ;MACRa,SAAS;MACTC,QAAQ;MACRC,WAAW;MACXC;IACF,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAOV,IAAI,CAACW,KAAK,CAACb,YAAY,CAACc,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;EAEAC,cAAcA,CAAA,EAAG;IACf,MAAMC,IAAI,GAAG,IAAI,CAACJ,cAAc,CAAC,CAAC;IAClC,OAAO,CAAC,CAACI,IAAI,IAAI,CAAC,CAACA,IAAI,CAACjB,WAAW;EACrC;EAEAkB,QAAQA,CAAA,EAAG;IACT,MAAMD,IAAI,GAAG,IAAI,CAACJ,cAAc,CAAC,CAAC;IAClC,OAAOI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEjB,WAAW;EAC1B;EAEAmB,OAAOA,CAACC,aAAa,EAAE;IACrB,MAAMH,IAAI,GAAG,IAAI,CAACJ,cAAc,CAAC,CAAC;IAClC,IAAI,CAACI,IAAI,EAAE,OAAO,KAAK;IAEvB,OAAOG,aAAa,CAACC,IAAI,CAACC,IAAI,IAAIL,IAAI,CAACL,KAAK,CAACW,QAAQ,CAACD,IAAI,CAAC,CAAC;EAC9D;EAEAE,aAAaA,CAACf,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAEc,eAAe,EAAEC,WAAW,EAAE;IAC5E,OAAOlC,OAAO,CAACgC,aAAa,CAAC;MAC3Bf,SAAS;MACTC,QAAQ;MACRC,WAAW;MACXf,QAAQ,EAAE8B,WAAW;MACrBD;IACF,CAAC,CAAC,CACD5B,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,WAAW,EAAE;QAC7BC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7D;MACA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAIN,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}